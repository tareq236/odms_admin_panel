generator client {
  provider = "prisma-client-js"
  output   = "./generated/client2"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL2")
}

model admin {
  id         String       @id
  name       String       @db.VarChar(100)
  username   String       @unique @db.VarChar(100)
  password   String       @db.VarChar(255)
  created_at DateTime     @default(now())
  updated_at DateTime
  roles      AdminRoles[] @default([admin])
  audio      audio[]
  language   language[]
  place      place[]
  user       user[]
}

model audio {
  img_path    String[] @db.VarChar(255)
  place_id    String
  language_id String
  admin_id    String?
  created_at  DateTime @default(now())
  updated_at  DateTime
  file_path   String   @db.VarChar(255)
  file_url    String   @db.VarChar(255)
  img_url     String[] @db.VarChar(255)
  id          String   @unique
  admin       admin?   @relation(fields: [admin_id], references: [id])

  @@id([place_id, language_id])
}

model language {
  id         String   @id
  name       String   @unique @db.VarChar(100)
  img_path   String   @db.VarChar(255)
  admin_id   String?
  created_at DateTime @default(now())
  updated_at DateTime
  img_url    String   @db.VarChar(255)
  admin      admin?   @relation(fields: [admin_id], references: [id])
}

model place {
  id         String   @id
  name       String   @unique @db.VarChar(100)
  img_path   String   @db.VarChar(255)
  admin_id   String?
  created_at DateTime @default(now())
  updated_at DateTime
  img_url    String   @db.VarChar(255)
  admin      admin?   @relation(fields: [admin_id], references: [id])
  user       user[]
}

model user {
  id         String   @id
  name       String   @db.VarChar(100)
  username   String   @unique @db.VarChar(100)
  password   String   @db.VarChar(255)
  place_id   String?
  admin_id   String?
  created_at DateTime @default(now())
  updated_at DateTime
  admin      admin?   @relation(fields: [admin_id], references: [id])
  place      place?   @relation(fields: [place_id], references: [id])
}

enum AdminRoles {
  superadmin
  admin
}
